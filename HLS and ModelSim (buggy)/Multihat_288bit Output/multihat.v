// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="multihat,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7vx485t-ffg1157-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.346250,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=324,HLS_SYN_LUT=489,HLS_VERSION=2019_2}" *)

module multihat (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_return
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [287:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [15:0] z1_V;
reg   [15:0] z1_V_5;
reg   [15:0] z1_V_4;
reg   [15:0] z1_V_3;
reg    lfsr_value_V_LFSR_fu_144_ap_start;
wire    lfsr_value_V_LFSR_fu_144_ap_done;
wire    lfsr_value_V_LFSR_fu_144_ap_idle;
wire    lfsr_value_V_LFSR_fu_144_ap_ready;
wire   [127:0] lfsr_value_V_LFSR_fu_144_ap_return;
wire   [15:0] p_Result_27_fu_384_p4;
wire   [15:0] p_Result_29_fu_646_p4;
wire   [15:0] p_Result_31_fu_908_p4;
wire   [15:0] p_Result_33_fu_1170_p4;
wire   [0:0] tmp_fu_154_p3;
wire   [0:0] tmp_2_fu_170_p3;
wire   [0:0] or_ln57_fu_186_p2;
wire   [0:0] tmp_1_fu_162_p3;
wire   [0:0] or_ln57_1_fu_192_p2;
wire   [0:0] tmp_3_fu_178_p3;
wire   [0:0] tmp_5_fu_204_p3;
wire   [0:0] tmp_7_fu_220_p3;
wire   [0:0] and_ln160_fu_228_p2;
wire   [0:0] tmp_6_fu_212_p3;
wire   [0:0] tmp_9_fu_252_p3;
wire   [0:0] tmp_8_fu_244_p3;
wire   [0:0] tmp_10_fu_266_p3;
wire   [0:0] xor_ln160_1_fu_274_p2;
wire   [0:0] xor_ln160_fu_260_p2;
wire   [0:0] xor_ln160_2_fu_280_p2;
wire   [0:0] tmp_11_fu_292_p3;
wire   [0:0] tmp_12_fu_300_p3;
wire   [0:0] xor_ln60_fu_308_p2;
wire   [0:0] xor_ln60_2_fu_320_p2;
wire   [0:0] xor_ln60_1_fu_314_p2;
wire   [0:0] tmp_13_fu_336_p3;
wire   [0:0] p_Result_26_fu_344_p3;
wire   [12:0] trunc_ln647_fu_332_p1;
wire   [0:0] a_V_fu_198_p2;
wire   [15:0] p_Result_s_fu_352_p5;
wire   [15:0] p_Result_2_fu_150_p1;
wire   [15:0] p_Val2_20_fu_364_p3;
wire   [0:0] p_Result_34_fu_376_p3;
wire   [13:0] trunc_ln647_1_fu_372_p1;
wire   [0:0] tmp_16_fu_410_p3;
wire   [0:0] tmp_18_fu_426_p3;
wire   [0:0] or_ln103_fu_442_p2;
wire   [0:0] tmp_17_fu_418_p3;
wire   [0:0] or_ln103_1_fu_448_p2;
wire   [0:0] tmp_19_fu_434_p3;
wire   [0:0] tmp_20_fu_460_p3;
wire   [0:0] tmp_22_fu_476_p3;
wire   [0:0] and_ln160_5_fu_484_p2;
wire   [0:0] tmp_21_fu_468_p3;
wire   [0:0] tmp_24_fu_508_p3;
wire   [0:0] tmp_23_fu_500_p3;
wire   [0:0] tmp_25_fu_522_p3;
wire   [0:0] xor_ln160_4_fu_530_p2;
wire   [0:0] xor_ln160_3_fu_516_p2;
wire   [0:0] xor_ln160_5_fu_536_p2;
wire   [0:0] tmp_26_fu_548_p3;
wire   [0:0] tmp_27_fu_556_p3;
wire   [0:0] xor_ln106_fu_564_p2;
wire   [0:0] xor_ln106_2_fu_576_p2;
wire   [0:0] xor_ln106_1_fu_570_p2;
wire   [0:0] tmp_28_fu_598_p3;
wire   [0:0] p_Result_28_fu_606_p3;
wire   [12:0] p_Result_i1_fu_588_p4;
wire   [0:0] a_V_1_fu_454_p2;
wire   [15:0] p_Result_5_fu_614_p5;
wire   [15:0] p_Result_6_fu_400_p4;
wire   [15:0] p_Val2_21_fu_626_p3;
wire   [0:0] p_Result_36_fu_638_p3;
wire   [13:0] trunc_ln647_2_fu_634_p1;
wire   [0:0] tmp_31_fu_672_p3;
wire   [0:0] tmp_33_fu_688_p3;
wire   [0:0] or_ln149_fu_704_p2;
wire   [0:0] tmp_32_fu_680_p3;
wire   [0:0] or_ln149_1_fu_710_p2;
wire   [0:0] tmp_34_fu_696_p3;
wire   [0:0] tmp_35_fu_722_p3;
wire   [0:0] tmp_37_fu_738_p3;
wire   [0:0] and_ln160_10_fu_746_p2;
wire   [0:0] tmp_36_fu_730_p3;
wire   [0:0] tmp_39_fu_770_p3;
wire   [0:0] tmp_38_fu_762_p3;
wire   [0:0] tmp_40_fu_784_p3;
wire   [0:0] xor_ln160_7_fu_792_p2;
wire   [0:0] xor_ln160_6_fu_778_p2;
wire   [0:0] xor_ln160_8_fu_798_p2;
wire   [0:0] tmp_41_fu_810_p3;
wire   [0:0] tmp_42_fu_818_p3;
wire   [0:0] xor_ln152_fu_826_p2;
wire   [0:0] xor_ln152_2_fu_838_p2;
wire   [0:0] xor_ln152_1_fu_832_p2;
wire   [0:0] tmp_43_fu_860_p3;
wire   [0:0] p_Result_30_fu_868_p3;
wire   [12:0] p_Result_i2_fu_850_p4;
wire   [0:0] a_V_2_fu_716_p2;
wire   [15:0] p_Result_9_fu_876_p5;
wire   [15:0] p_Result_10_fu_662_p4;
wire   [15:0] p_Val2_22_fu_888_p3;
wire   [0:0] p_Result_38_fu_900_p3;
wire   [13:0] trunc_ln647_3_fu_896_p1;
wire   [0:0] tmp_46_fu_934_p3;
wire   [0:0] tmp_48_fu_950_p3;
wire   [0:0] or_ln195_fu_966_p2;
wire   [0:0] tmp_47_fu_942_p3;
wire   [0:0] or_ln195_1_fu_972_p2;
wire   [0:0] tmp_49_fu_958_p3;
wire   [0:0] tmp_50_fu_984_p3;
wire   [0:0] tmp_52_fu_1000_p3;
wire   [0:0] and_ln160_15_fu_1008_p2;
wire   [0:0] tmp_51_fu_992_p3;
wire   [0:0] tmp_54_fu_1032_p3;
wire   [0:0] tmp_53_fu_1024_p3;
wire   [0:0] tmp_55_fu_1046_p3;
wire   [0:0] xor_ln160_10_fu_1054_p2;
wire   [0:0] xor_ln160_9_fu_1040_p2;
wire   [0:0] xor_ln160_11_fu_1060_p2;
wire   [0:0] tmp_56_fu_1072_p3;
wire   [0:0] tmp_57_fu_1080_p3;
wire   [0:0] xor_ln198_fu_1088_p2;
wire   [0:0] xor_ln198_2_fu_1100_p2;
wire   [0:0] xor_ln198_1_fu_1094_p2;
wire   [0:0] tmp_58_fu_1122_p3;
wire   [0:0] p_Result_32_fu_1130_p3;
wire   [12:0] p_Result_i3_fu_1112_p4;
wire   [0:0] a_V_3_fu_978_p2;
wire   [15:0] p_Result_13_fu_1138_p5;
wire   [15:0] p_Result_14_fu_924_p4;
wire   [15:0] p_Val2_23_fu_1150_p3;
wire   [0:0] p_Result_40_fu_1162_p3;
wire   [13:0] trunc_ln647_4_fu_1158_p1;
wire   [16:0] p_Result_35_fu_1186_p5;
wire   [16:0] p_Result_37_fu_1198_p5;
wire   [16:0] p_Result_39_fu_1216_p5;
wire   [16:0] p_Result_41_fu_1228_p5;
wire   [16:0] s00_V_fu_1210_p2;
wire   [0:0] p_Result_42_fu_1256_p3;
wire   [15:0] p_Result_i4_fu_1246_p4;
wire   [16:0] s01_V_fu_1240_p2;
wire   [0:0] p_Result_43_fu_1282_p3;
wire   [15:0] p_Result_21_i_fu_1272_p4;
wire   [16:0] tmp_i4_fu_1264_p3;
wire   [16:0] tmp_5_i_fu_1290_p3;
wire   [16:0] s10_V_fu_1298_p2;
wire   [15:0] p_Result_22_i_fu_1304_p4;
wire   [47:0] zext_ln647_fu_1318_p1;
wire   [0:0] b_V_3_fu_1014_p2;
wire   [0:0] c_V_3_fu_1066_p2;
wire   [0:0] d_V_3_fu_1106_p2;
wire   [0:0] b_V_2_fu_752_p2;
wire   [0:0] c_V_2_fu_804_p2;
wire   [0:0] d_V_2_fu_844_p2;
wire   [0:0] b_V_1_fu_490_p2;
wire   [0:0] c_V_1_fu_542_p2;
wire   [0:0] d_V_1_fu_582_p2;
wire   [0:0] b_V_fu_234_p2;
wire   [0:0] c_V_fu_286_p2;
wire   [0:0] d_V_fu_326_p2;
wire  signed [19:0] out_V_fu_1314_p1;
wire   [148:0] tmp_4_fu_1322_p32;
reg   [0:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 z1_V = 16'd0;
#0 z1_V_5 = 16'd0;
#0 z1_V_4 = 16'd0;
#0 z1_V_3 = 16'd0;
end

LFSR lfsr_value_V_LFSR_fu_144(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(lfsr_value_V_LFSR_fu_144_ap_start),
    .ap_done(lfsr_value_V_LFSR_fu_144_ap_done),
    .ap_idle(lfsr_value_V_LFSR_fu_144_ap_idle),
    .ap_ready(lfsr_value_V_LFSR_fu_144_ap_ready),
    .ap_return(lfsr_value_V_LFSR_fu_144_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        z1_V <= p_Result_27_fu_384_p4;
        z1_V_3 <= p_Result_33_fu_1170_p4;
        z1_V_4 <= p_Result_31_fu_908_p4;
        z1_V_5 <= p_Result_29_fu_646_p4;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        lfsr_value_V_LFSR_fu_144_ap_start = 1'b1;
    end else begin
        lfsr_value_V_LFSR_fu_144_ap_start = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_V_1_fu_454_p2 = (tmp_19_fu_434_p3 & or_ln103_1_fu_448_p2);

assign a_V_2_fu_716_p2 = (tmp_34_fu_696_p3 & or_ln149_1_fu_710_p2);

assign a_V_3_fu_978_p2 = (tmp_49_fu_958_p3 & or_ln195_1_fu_972_p2);

assign a_V_fu_198_p2 = (tmp_3_fu_178_p3 & or_ln57_1_fu_192_p2);

assign and_ln160_10_fu_746_p2 = (tmp_37_fu_738_p3 & tmp_35_fu_722_p3);

assign and_ln160_15_fu_1008_p2 = (tmp_52_fu_1000_p3 & tmp_50_fu_984_p3);

assign and_ln160_5_fu_484_p2 = (tmp_22_fu_476_p3 & tmp_20_fu_460_p3);

assign and_ln160_fu_228_p2 = (tmp_7_fu_220_p3 & tmp_5_fu_204_p3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_return = tmp_4_fu_1322_p32;

assign b_V_1_fu_490_p2 = (tmp_21_fu_468_p3 & and_ln160_5_fu_484_p2);

assign b_V_2_fu_752_p2 = (tmp_36_fu_730_p3 & and_ln160_10_fu_746_p2);

assign b_V_3_fu_1014_p2 = (tmp_51_fu_992_p3 & and_ln160_15_fu_1008_p2);

assign b_V_fu_234_p2 = (tmp_6_fu_212_p3 & and_ln160_fu_228_p2);

assign c_V_1_fu_542_p2 = (xor_ln160_5_fu_536_p2 & xor_ln160_3_fu_516_p2);

assign c_V_2_fu_804_p2 = (xor_ln160_8_fu_798_p2 & xor_ln160_6_fu_778_p2);

assign c_V_3_fu_1066_p2 = (xor_ln160_9_fu_1040_p2 & xor_ln160_11_fu_1060_p2);

assign c_V_fu_286_p2 = (xor_ln160_fu_260_p2 & xor_ln160_2_fu_280_p2);

assign d_V_1_fu_582_p2 = (xor_ln106_2_fu_576_p2 & xor_ln106_1_fu_570_p2);

assign d_V_2_fu_844_p2 = (xor_ln152_2_fu_838_p2 & xor_ln152_1_fu_832_p2);

assign d_V_3_fu_1106_p2 = (xor_ln198_2_fu_1100_p2 & xor_ln198_1_fu_1094_p2);

assign d_V_fu_326_p2 = (xor_ln60_2_fu_320_p2 & xor_ln60_1_fu_314_p2);

assign or_ln103_1_fu_448_p2 = (tmp_17_fu_418_p3 | or_ln103_fu_442_p2);

assign or_ln103_fu_442_p2 = (tmp_18_fu_426_p3 | tmp_16_fu_410_p3);

assign or_ln149_1_fu_710_p2 = (tmp_32_fu_680_p3 | or_ln149_fu_704_p2);

assign or_ln149_fu_704_p2 = (tmp_33_fu_688_p3 | tmp_31_fu_672_p3);

assign or_ln195_1_fu_972_p2 = (tmp_47_fu_942_p3 | or_ln195_fu_966_p2);

assign or_ln195_fu_966_p2 = (tmp_48_fu_950_p3 | tmp_46_fu_934_p3);

assign or_ln57_1_fu_192_p2 = (tmp_1_fu_162_p3 | or_ln57_fu_186_p2);

assign or_ln57_fu_186_p2 = (tmp_fu_154_p3 | tmp_2_fu_170_p3);

assign out_V_fu_1314_p1 = $signed(p_Result_22_i_fu_1304_p4);

assign p_Result_10_fu_662_p4 = {{lfsr_value_V_LFSR_fu_144_ap_return[79:64]}};

assign p_Result_13_fu_1138_p5 = {{{{tmp_58_fu_1122_p3}, {p_Result_32_fu_1130_p3}}, {p_Result_32_fu_1130_p3}}, {p_Result_i3_fu_1112_p4}};

assign p_Result_14_fu_924_p4 = {{lfsr_value_V_LFSR_fu_144_ap_return[111:96]}};

assign p_Result_21_i_fu_1272_p4 = {{s01_V_fu_1240_p2[16:1]}};

assign p_Result_22_i_fu_1304_p4 = {{s10_V_fu_1298_p2[16:1]}};

assign p_Result_26_fu_344_p3 = lfsr_value_V_LFSR_fu_144_ap_return[32'd15];

assign p_Result_27_fu_384_p4 = {{{p_Result_34_fu_376_p3}, {p_Result_34_fu_376_p3}}, {trunc_ln647_1_fu_372_p1}};

assign p_Result_28_fu_606_p3 = lfsr_value_V_LFSR_fu_144_ap_return[32'd47];

assign p_Result_29_fu_646_p4 = {{{p_Result_36_fu_638_p3}, {p_Result_36_fu_638_p3}}, {trunc_ln647_2_fu_634_p1}};

assign p_Result_2_fu_150_p1 = lfsr_value_V_LFSR_fu_144_ap_return[15:0];

assign p_Result_30_fu_868_p3 = lfsr_value_V_LFSR_fu_144_ap_return[32'd79];

assign p_Result_31_fu_908_p4 = {{{p_Result_38_fu_900_p3}, {p_Result_38_fu_900_p3}}, {trunc_ln647_3_fu_896_p1}};

assign p_Result_32_fu_1130_p3 = lfsr_value_V_LFSR_fu_144_ap_return[32'd111];

assign p_Result_33_fu_1170_p4 = {{{p_Result_40_fu_1162_p3}, {p_Result_40_fu_1162_p3}}, {trunc_ln647_4_fu_1158_p1}};

assign p_Result_34_fu_376_p3 = p_Val2_20_fu_364_p3[32'd15];

assign p_Result_35_fu_1186_p5 = {{{{p_Result_34_fu_376_p3}, {p_Result_34_fu_376_p3}}, {p_Result_34_fu_376_p3}}, {trunc_ln647_1_fu_372_p1}};

assign p_Result_36_fu_638_p3 = p_Val2_21_fu_626_p3[32'd15];

assign p_Result_37_fu_1198_p5 = {{{{p_Result_36_fu_638_p3}, {p_Result_36_fu_638_p3}}, {p_Result_36_fu_638_p3}}, {trunc_ln647_2_fu_634_p1}};

assign p_Result_38_fu_900_p3 = p_Val2_22_fu_888_p3[32'd15];

assign p_Result_39_fu_1216_p5 = {{{{p_Result_38_fu_900_p3}, {p_Result_38_fu_900_p3}}, {p_Result_38_fu_900_p3}}, {trunc_ln647_3_fu_896_p1}};

assign p_Result_40_fu_1162_p3 = p_Val2_23_fu_1150_p3[32'd15];

assign p_Result_41_fu_1228_p5 = {{{{p_Result_40_fu_1162_p3}, {p_Result_40_fu_1162_p3}}, {p_Result_40_fu_1162_p3}}, {trunc_ln647_4_fu_1158_p1}};

assign p_Result_42_fu_1256_p3 = s00_V_fu_1210_p2[32'd16];

assign p_Result_43_fu_1282_p3 = s01_V_fu_1240_p2[32'd16];

assign p_Result_5_fu_614_p5 = {{{{tmp_28_fu_598_p3}, {p_Result_28_fu_606_p3}}, {p_Result_28_fu_606_p3}}, {p_Result_i1_fu_588_p4}};

assign p_Result_6_fu_400_p4 = {{lfsr_value_V_LFSR_fu_144_ap_return[47:32]}};

assign p_Result_9_fu_876_p5 = {{{{tmp_43_fu_860_p3}, {p_Result_30_fu_868_p3}}, {p_Result_30_fu_868_p3}}, {p_Result_i2_fu_850_p4}};

assign p_Result_i1_fu_588_p4 = {{lfsr_value_V_LFSR_fu_144_ap_return[44:32]}};

assign p_Result_i2_fu_850_p4 = {{lfsr_value_V_LFSR_fu_144_ap_return[76:64]}};

assign p_Result_i3_fu_1112_p4 = {{lfsr_value_V_LFSR_fu_144_ap_return[108:96]}};

assign p_Result_i4_fu_1246_p4 = {{s00_V_fu_1210_p2[16:1]}};

assign p_Result_s_fu_352_p5 = {{{{tmp_13_fu_336_p3}, {p_Result_26_fu_344_p3}}, {p_Result_26_fu_344_p3}}, {trunc_ln647_fu_332_p1}};

assign p_Val2_20_fu_364_p3 = ((a_V_fu_198_p2[0:0] === 1'b1) ? p_Result_s_fu_352_p5 : p_Result_2_fu_150_p1);

assign p_Val2_21_fu_626_p3 = ((a_V_1_fu_454_p2[0:0] === 1'b1) ? p_Result_5_fu_614_p5 : p_Result_6_fu_400_p4);

assign p_Val2_22_fu_888_p3 = ((a_V_2_fu_716_p2[0:0] === 1'b1) ? p_Result_9_fu_876_p5 : p_Result_10_fu_662_p4);

assign p_Val2_23_fu_1150_p3 = ((a_V_3_fu_978_p2[0:0] === 1'b1) ? p_Result_13_fu_1138_p5 : p_Result_14_fu_924_p4);

assign s00_V_fu_1210_p2 = (p_Result_35_fu_1186_p5 + p_Result_37_fu_1198_p5);

assign s01_V_fu_1240_p2 = (p_Result_39_fu_1216_p5 + p_Result_41_fu_1228_p5);

assign s10_V_fu_1298_p2 = (tmp_i4_fu_1264_p3 + tmp_5_i_fu_1290_p3);

assign tmp_10_fu_266_p3 = z1_V[32'd13];

assign tmp_11_fu_292_p3 = lfsr_value_V_LFSR_fu_144_ap_return[32'd27];

assign tmp_12_fu_300_p3 = lfsr_value_V_LFSR_fu_144_ap_return[32'd28];

assign tmp_13_fu_336_p3 = lfsr_value_V_LFSR_fu_144_ap_return[32'd15];

assign tmp_16_fu_410_p3 = lfsr_value_V_LFSR_fu_144_ap_return[32'd54];

assign tmp_17_fu_418_p3 = lfsr_value_V_LFSR_fu_144_ap_return[32'd52];

assign tmp_18_fu_426_p3 = lfsr_value_V_LFSR_fu_144_ap_return[32'd53];

assign tmp_19_fu_434_p3 = lfsr_value_V_LFSR_fu_144_ap_return[32'd55];

assign tmp_1_fu_162_p3 = lfsr_value_V_LFSR_fu_144_ap_return[32'd20];

assign tmp_20_fu_460_p3 = lfsr_value_V_LFSR_fu_144_ap_return[32'd58];

assign tmp_21_fu_468_p3 = lfsr_value_V_LFSR_fu_144_ap_return[32'd56];

assign tmp_22_fu_476_p3 = lfsr_value_V_LFSR_fu_144_ap_return[32'd57];

assign tmp_23_fu_500_p3 = z1_V_5[32'd14];

assign tmp_24_fu_508_p3 = z1_V_5[32'd15];

assign tmp_25_fu_522_p3 = z1_V_5[32'd13];

assign tmp_26_fu_548_p3 = lfsr_value_V_LFSR_fu_144_ap_return[32'd59];

assign tmp_27_fu_556_p3 = lfsr_value_V_LFSR_fu_144_ap_return[32'd60];

assign tmp_28_fu_598_p3 = lfsr_value_V_LFSR_fu_144_ap_return[32'd47];

assign tmp_2_fu_170_p3 = lfsr_value_V_LFSR_fu_144_ap_return[32'd21];

assign tmp_31_fu_672_p3 = lfsr_value_V_LFSR_fu_144_ap_return[32'd86];

assign tmp_32_fu_680_p3 = lfsr_value_V_LFSR_fu_144_ap_return[32'd84];

assign tmp_33_fu_688_p3 = lfsr_value_V_LFSR_fu_144_ap_return[32'd85];

assign tmp_34_fu_696_p3 = lfsr_value_V_LFSR_fu_144_ap_return[32'd87];

assign tmp_35_fu_722_p3 = lfsr_value_V_LFSR_fu_144_ap_return[32'd90];

assign tmp_36_fu_730_p3 = lfsr_value_V_LFSR_fu_144_ap_return[32'd88];

assign tmp_37_fu_738_p3 = lfsr_value_V_LFSR_fu_144_ap_return[32'd89];

assign tmp_38_fu_762_p3 = z1_V_4[32'd14];

assign tmp_39_fu_770_p3 = z1_V_4[32'd15];

assign tmp_3_fu_178_p3 = lfsr_value_V_LFSR_fu_144_ap_return[32'd23];

assign tmp_40_fu_784_p3 = z1_V_4[32'd13];

assign tmp_41_fu_810_p3 = lfsr_value_V_LFSR_fu_144_ap_return[32'd91];

assign tmp_42_fu_818_p3 = lfsr_value_V_LFSR_fu_144_ap_return[32'd92];

assign tmp_43_fu_860_p3 = lfsr_value_V_LFSR_fu_144_ap_return[32'd79];

assign tmp_46_fu_934_p3 = lfsr_value_V_LFSR_fu_144_ap_return[32'd118];

assign tmp_47_fu_942_p3 = lfsr_value_V_LFSR_fu_144_ap_return[32'd116];

assign tmp_48_fu_950_p3 = lfsr_value_V_LFSR_fu_144_ap_return[32'd117];

assign tmp_49_fu_958_p3 = lfsr_value_V_LFSR_fu_144_ap_return[32'd119];

assign tmp_4_fu_1322_p32 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{a_V_1_fu_454_p2}, {zext_ln647_fu_1318_p1}}, {a_V_3_fu_978_p2}}, {b_V_3_fu_1014_p2}}, {c_V_3_fu_1066_p2}}, {d_V_3_fu_1106_p2}}, {a_V_2_fu_716_p2}}, {b_V_2_fu_752_p2}}, {c_V_2_fu_804_p2}}, {d_V_2_fu_844_p2}}, {a_V_1_fu_454_p2}}, {b_V_1_fu_490_p2}}, {c_V_1_fu_542_p2}}, {d_V_1_fu_582_p2}}, {a_V_fu_198_p2}}, {b_V_fu_234_p2}}, {c_V_fu_286_p2}}, {d_V_fu_326_p2}}, {out_V_fu_1314_p1}}, {p_Result_34_fu_376_p3}}, {p_Result_34_fu_376_p3}}, {trunc_ln647_1_fu_372_p1}}, {p_Result_36_fu_638_p3}}, {p_Result_36_fu_638_p3}}, {trunc_ln647_2_fu_634_p1}}, {p_Result_38_fu_900_p3}}, {p_Result_38_fu_900_p3}}, {trunc_ln647_3_fu_896_p1}}, {p_Result_40_fu_1162_p3}}, {p_Result_40_fu_1162_p3}}, {trunc_ln647_4_fu_1158_p1}};

assign tmp_50_fu_984_p3 = lfsr_value_V_LFSR_fu_144_ap_return[32'd122];

assign tmp_51_fu_992_p3 = lfsr_value_V_LFSR_fu_144_ap_return[32'd120];

assign tmp_52_fu_1000_p3 = lfsr_value_V_LFSR_fu_144_ap_return[32'd121];

assign tmp_53_fu_1024_p3 = z1_V_3[32'd14];

assign tmp_54_fu_1032_p3 = z1_V_3[32'd15];

assign tmp_55_fu_1046_p3 = z1_V_3[32'd13];

assign tmp_56_fu_1072_p3 = lfsr_value_V_LFSR_fu_144_ap_return[32'd123];

assign tmp_57_fu_1080_p3 = lfsr_value_V_LFSR_fu_144_ap_return[32'd124];

assign tmp_58_fu_1122_p3 = lfsr_value_V_LFSR_fu_144_ap_return[32'd111];

assign tmp_5_fu_204_p3 = lfsr_value_V_LFSR_fu_144_ap_return[32'd26];

assign tmp_5_i_fu_1290_p3 = {{p_Result_43_fu_1282_p3}, {p_Result_21_i_fu_1272_p4}};

assign tmp_6_fu_212_p3 = lfsr_value_V_LFSR_fu_144_ap_return[32'd24];

assign tmp_7_fu_220_p3 = lfsr_value_V_LFSR_fu_144_ap_return[32'd25];

assign tmp_8_fu_244_p3 = z1_V[32'd14];

assign tmp_9_fu_252_p3 = z1_V[32'd15];

assign tmp_fu_154_p3 = lfsr_value_V_LFSR_fu_144_ap_return[32'd22];

assign tmp_i4_fu_1264_p3 = {{p_Result_42_fu_1256_p3}, {p_Result_i4_fu_1246_p4}};

assign trunc_ln647_1_fu_372_p1 = p_Val2_20_fu_364_p3[13:0];

assign trunc_ln647_2_fu_634_p1 = p_Val2_21_fu_626_p3[13:0];

assign trunc_ln647_3_fu_896_p1 = p_Val2_22_fu_888_p3[13:0];

assign trunc_ln647_4_fu_1158_p1 = p_Val2_23_fu_1150_p3[13:0];

assign trunc_ln647_fu_332_p1 = lfsr_value_V_LFSR_fu_144_ap_return[12:0];

assign xor_ln106_1_fu_570_p2 = (xor_ln106_fu_564_p2 ^ 1'd1);

assign xor_ln106_2_fu_576_p2 = (tmp_26_fu_548_p3 ^ tmp_24_fu_508_p3);

assign xor_ln106_fu_564_p2 = (tmp_27_fu_556_p3 ^ tmp_26_fu_548_p3);

assign xor_ln152_1_fu_832_p2 = (xor_ln152_fu_826_p2 ^ 1'd1);

assign xor_ln152_2_fu_838_p2 = (tmp_41_fu_810_p3 ^ tmp_39_fu_770_p3);

assign xor_ln152_fu_826_p2 = (tmp_42_fu_818_p3 ^ tmp_41_fu_810_p3);

assign xor_ln160_10_fu_1054_p2 = (tmp_55_fu_1046_p3 ^ tmp_53_fu_1024_p3);

assign xor_ln160_11_fu_1060_p2 = (xor_ln160_10_fu_1054_p2 ^ 1'd1);

assign xor_ln160_1_fu_274_p2 = (tmp_8_fu_244_p3 ^ tmp_10_fu_266_p3);

assign xor_ln160_2_fu_280_p2 = (xor_ln160_1_fu_274_p2 ^ 1'd1);

assign xor_ln160_3_fu_516_p2 = (tmp_24_fu_508_p3 ^ tmp_23_fu_500_p3);

assign xor_ln160_4_fu_530_p2 = (tmp_25_fu_522_p3 ^ tmp_23_fu_500_p3);

assign xor_ln160_5_fu_536_p2 = (xor_ln160_4_fu_530_p2 ^ 1'd1);

assign xor_ln160_6_fu_778_p2 = (tmp_39_fu_770_p3 ^ tmp_38_fu_762_p3);

assign xor_ln160_7_fu_792_p2 = (tmp_40_fu_784_p3 ^ tmp_38_fu_762_p3);

assign xor_ln160_8_fu_798_p2 = (xor_ln160_7_fu_792_p2 ^ 1'd1);

assign xor_ln160_9_fu_1040_p2 = (tmp_54_fu_1032_p3 ^ tmp_53_fu_1024_p3);

assign xor_ln160_fu_260_p2 = (tmp_9_fu_252_p3 ^ tmp_8_fu_244_p3);

assign xor_ln198_1_fu_1094_p2 = (xor_ln198_fu_1088_p2 ^ 1'd1);

assign xor_ln198_2_fu_1100_p2 = (tmp_56_fu_1072_p3 ^ tmp_54_fu_1032_p3);

assign xor_ln198_fu_1088_p2 = (tmp_57_fu_1080_p3 ^ tmp_56_fu_1072_p3);

assign xor_ln60_1_fu_314_p2 = (xor_ln60_fu_308_p2 ^ 1'd1);

assign xor_ln60_2_fu_320_p2 = (tmp_9_fu_252_p3 ^ tmp_11_fu_292_p3);

assign xor_ln60_fu_308_p2 = (tmp_12_fu_300_p3 ^ tmp_11_fu_292_p3);

assign zext_ln647_fu_1318_p1 = a_V_fu_198_p2;

endmodule //multihat
